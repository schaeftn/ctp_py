"""Simple travelling salesman problem on a circuit board."""
from __future__ import print_function

import sys

import networkx as nx
from scipy.sparse import csr_matrix
import numpy as np
from scipy.sparse.csgraph import minimum_spanning_tree
from scipy.sparse.csgraph._shortest_path import shortest_path
from scipy.sparse.csgraph._traversal import depth_first_order

np.set_printoptions(threshold=sys.maxsize)
np.set_printoptions(suppress=True)

def create_data_model():
    data = {}
    data['distances'] = np.array(
    [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.048236846923828, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.900014400482178, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.498825073242188, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.208463668823242, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.868755340576172, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 13.965738296508789, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.215751647949219, 0.0, 0.0, 0.0, 0.0, 0.0, 10.49790096282959, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 18.8132266998291, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.984672546386719, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 16.881988525390625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 13.846899032592773, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 13.13135814666748, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.856966495513916, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 16.881988525390625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.8886213302612305, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.3352952003479, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.171838760375977, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 16.97447395324707, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.554930686950684, 0.0, 0.0, 0.0, 0.0, 10.07420825958252, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [5.048236846923828, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.904241561889648, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.16948413848877, 0.0, 0.0, 5.576393127441406, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 16.97447395324707, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.330662250518799, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 15.509817123413086], [0.0, 7.208463668823242, 0.0, 0.0, 0.0, 0.0, 0.0, 5.3352952003479, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 18.8132266998291, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.909829616546631, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.136749267578125, 0.0, 0.0, 0.0, 7.761558532714844, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 13.13135814666748, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 18.780494689941406, 0.0, 0.0, 0.0], [0.0, 0.0, 13.965738296508789, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.909829616546631, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 13.846899032592773, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.330662250518799, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.242875099182129, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.68187427520752, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 24.813724517822266, 0.0, 0.0, 0.0, 19.323354721069336, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.192120552062988, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 14.768892288208008, 0.0, 9.231122016906738, 0.0, 0.0, 0.0, 24.91042709350586, 0.0, 0.0], [0.0, 10.868755340576172, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.613388061523438, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 19.716800689697266, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 24.813724517822266, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.585722923278809, 15.407149314880371, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 11.215751647949219, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.780264854431152, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 16.263839721679688, 0.0, 0.0, 5.488250732421875], [7.900014400482178, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.381551265716553, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.242875099182129, 19.323354721069336, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.725020408630371, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.554930686950684, 8.904241561889648, 0.0, 0.0, 0.0, 0.0, 10.136749267578125, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.613388061523438, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 16.822885513305664, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 10.49790096282959, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 13.438681602478027, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.8886213302612305, 0.0, 0.0, 0.0, 10.16948413848877, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.725020408630371, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.761558532714844, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 22.714527130126953], [10.498825073242188, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.07420825958252, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.576393127441406, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.68187427520752, 0.0, 14.768892288208008, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.171838760375977, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.381551265716553, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.231122016906738, 0.0, 0.0, 7.780264854431152, 0.0, 0.0, 0.0, 0.0, 0.0, 13.438681602478027, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 19.716800689697266, 8.585722923278809, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 15.407149314880371, 0.0, 0.0, 0.0, 0.0, 0.0, 16.822885513305664, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 18.780494689941406, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 16.263839721679688, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 6.856966495513916, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 24.91042709350586, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 10.984672546386719, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.192120552062988, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 15.509817123413086, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.488250732421875, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 22.714527130126953, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]

    )
    data['num_vehicles'] = 1
    data['depot'] = 30
    return data


def main():
    G = nx.path_graph(5)
    g1 = nx.Graph()
    nodeList = [[26.890001, 24.218277], [-5.1484137, -5.7882385], [-13.269503, 31.227783], [-4.732254, -3.1984274],
                [40.998722, -10.5599985], [22.64841, 42.43428], [19.218546, -4.528002], [-13.903379, 18.712975],
                [40.0, -20.0], [-41.129223, 3.9311209], [-22.112118, -0.055293083], [-18.819502, 43.74259],
                [40.998722, -25.0], [19.218546, 7.5359936], [-15.465849, -4.2923837], [-23.891115, 47.44333],
                [11.0934105, 36.484318], [-14.629152, 3.350517], [-37.198494, 18.456396], [-12.346991, -4.2923837],
                [-41.67727, 30.099998], [-1.8327651, -11.486348], [26.890001, -42.343994], [-13.589907, 6.5908794],
                [-20.736673, -6.0767035], [-43.15, 47.44333], [17.695, 24.218277], [-40.0, 15.000001],
                [-39.556446, 47.44333], [-4.732254, 3.6], [-19.684914, 11.808635], [8.5, -3.8355289],
                [-13.099436, 9.326866], [-14.629152, 1.505109], [-29.277267, 12.716036], [-13.903379, 20.6],
                [-36.3, 30.099998], [-15.465849, -0.902339], [-27.823057, 0.39401293], [-11.132343, -28.531502],
                [-47.227264, 37.926712], [-23.127369, 11.808635], [-5.2936707, -22.49025], [-18.95228, 3.799823],
                [-25.243427, -44.49805], [-19.833057, 1.07428], [0.6217115, 36.484318], [2.8000004, -3.8355289],
                [-38.29467, 0.39401293], [-41.67727, 20.996449], [0.6217115, 16.840216], [8.5, 15.927649],
                [-30.050243, -24.034632], [-14.537256, 11.808635], [-32.222733, 47.44333], [15.141279, 15.927649],
                [-35.888916, -29.536581], [13.934706, -6.1233296], [-4.732254, 12.190658], [38.445, 31.783997],
                [-9.0313425, -5.7882385], [13.934706, -27.992199], [17.06514, -42.343994], [-5.2936707, -14.615461],
                [-18.819502, 39.6], [19.218546, 3.6], [13.934706, -20.336193], [-36.563683, 12.716036],
                [40.998722, 25.0], [-45.52123, 20.996449], [39.021713, -42.343994], [-13.447561, 43.74259],
                [-13.589907, 4.6338115], [-25.2, 30.099998], [-18.819502, 31.685925], [-47.227264, 40.483383],
                [-11.132343, -38.9961]]
    g1.add_nodes_from(
        [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
         30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57,
         58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76])
    g1.add_weighted_edges_from(
        [
            (38, 48, 10.471612930297852),
            (75, 25, 8.066282272338867),
            (45, 10, 2.5436296463012695),
            (29, 3, 6.798427581787109),
            (64, 74, 7.914073944091797),
            (2, 74, 5.568876266479492),
            (36, 73, 11.099998474121094),
            (45, 43, 2.8643243312835693),
            (7, 35, 1.8870258331298828),
            (50, 51, 7.930964946746826),
            (18, 67, 5.775354862213135),
            (53, 32, 2.8681881427764893),
            (24, 10, 6.176506519317627),
            (9, 48, 4.532750129699707),
            (22, 62, 9.824861526489258),
            (22, 70, 12.131711959838867),
            (0, 26, 9.195001602172852),
            (20, 36, 5.377269744873047),
            (72, 23, 1.9570679664611816),
            (18, 49, 5.148911952972412),
            (59, 68, 7.24873161315918),
            (5, 16, 12.996926307678223),
            (26, 55, 8.67502212524414),
            (46, 16, 10.471698760986328),
            (40, 20, 9.5947847366333),
            (28, 54, 7.333713531494141),
            (15, 54, 8.33161735534668),
            (63, 21, 4.665749549865723),
            (17, 43, 4.346413612365723),
            (45, 37, 4.793697357177734),
            (44, 76, 15.145763397216797),
            (50, 46, 19.644102096557617),
            (4, 68, 35.55999755859375),
            (6, 65, 8.128002166748047),
            (67, 34, 7.286415100097656),
            (37, 14, 3.390044689178467),
            (24, 14, 5.564655303955078),
            (33, 37, 2.548698902130127),
            (57, 66, 14.21286392211914),
            (27, 67, 4.126108646392822),
            (14, 19, 3.1188583374023438),
            (42, 39, 8.401597023010254),
            (7, 53, 6.933376312255859),
            (3, 1, 2.6230344772338867),
            (12, 70, 17.456308364868164),
            (60, 1, 3.8829288482666016),
            (52, 56, 8.022564888000488),
            (4, 12, 14.440001487731934),
            (65, 13, 3.9359936714172363),
            (5, 59, 19.051528930664062),
            (55, 51, 6.641279220581055),
            (33, 17, 1.8454080820083618),
            (41, 30, 3.442455291748047),
            (52, 39, 19.445018768310547),
            (6, 57, 5.519423484802246),
            (17, 72, 1.6513255834579468),
            (39, 76, 10.464599609375),
            (11, 71, 5.371940612792969),
            (50, 58, 7.091074466705322),
            (28, 25, 3.593555450439453),
            (30, 53, 5.14765739440918),
            (44, 56, 18.36224365234375),
            (47, 3, 7.559150218963623),
            (8, 12, 5.098769187927246),
            (55, 13, 9.32973575592041),
            (2, 35, 10.646669387817383),
            (59, 0, 13.81152057647705),
            (62, 61, 14.68923568725586),
            (23, 32, 2.779601573944092),
            (74, 73, 6.574642658233643),
            (1, 21, 6.592569828033447),
            (31, 47, 5.699999809265137),
            (41, 34, 6.216480255126953),
            (61, 66, 7.656005859375),
            (64, 11, 4.1425933837890625),
            (40, 75, 2.556671142578125),
            (60, 19, 3.637458324432373),
            (10, 38, 5.728586673736572),
            (57, 31, 5.896614074707031),
            (49, 20, 9.10354995727539),
            (69, 49, 3.8439598083496094),
            (63, 42, 7.874788284301758),
            (26, 16, 13.929706573486328),
            (58, 29, 8.590658187866211),
            (15, 11, 6.278273105621338)
        ])

    def dist(a,b):
        x1 = nodeList[a][0]
        x2 = nodeList[a][1]
        y1 = nodeList[b][0]
        y2 = nodeList[b][1]
        return ((x1 - x2) ** 2 + (y1 - y2) ** 2) ** 0.5

    print(nx.astar_path(g1, 0, 76, dist))


if __name__ == '__main__':
    main()